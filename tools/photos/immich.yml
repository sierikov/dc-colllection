#
# WARNING: Make sure to use the docker-compose.yml of the current release:
#
# https://github.com/immich-app/immich/blob/main/docker/docker-compose.yml
#
# The compose file on main may not be compatible with the latest release.
#

services:
  immich-server:
    container_name: immich-server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    ports:
      - 3007:2283
    depends_on:
      - redis
      - database
    restart: unless-stopped
    healthcheck:
      disable: false
    deploy:
      resources:
        limits:
          memory: 2G

  immich-machine-learning:
    container_name: immich-ml
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 2G
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    volumes:
      - ${CACHE_LOCATION}:/cache
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      disable: false

  redis:
    container_name: immich-redis
    image: registry.hub.docker.com/library/redis:${IMMICH_CACHE_VERSION}
    healthcheck:
      test: redis-cli ping || exit 1
    restart: unless-stopped

  database:
    container_name: immich-postgres
    image: ghcr.io/immich-app/postgres:${IMMICH_DB_VERSION}
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      # DB_STORAGE_TYPE: 'HDD' # reduces costs for storage lookup
    volumes:
      - ${DB_LOCATION}:/var/lib/postgresql/data
    restart: unless-stopped

  # to restore -> https://immich.app/docs/administration/backup-and-restore
  backup:
    container_name: immich-db-backup
    image: prodrigestivill/postgres-backup-local:${IMMICH_DB_BACKUP_VERSION}
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_HOST: database
      POSTGRES_CLUSTER: "TRUE"
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      SCHEDULE: "@midnight"
      POSTGRES_EXTRA_OPTS: "--clean --if-exists"
      BACKUP_DIR: /db_dumps
    volumes:
      - ${DB_BACKUP_LOCATION}:/db_dumps
    depends_on:
      - database
